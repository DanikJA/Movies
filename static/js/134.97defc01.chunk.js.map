{"version":3,"file":"static/js/134.97defc01.chunk.js","mappings":"wNAmEA,UA3De,WACb,IAAAA,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAA0CL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAA0BT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAChBG,GAAWC,EAAAA,EAAAA,MAMXC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAC,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACP,GAAnBJ,EAAEK,iBACGtB,EAAY,CAADmB,EAAAE,KAAA,eAAAF,EAAAI,OAAA,wBAAAJ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAESG,EAAAA,EAAAA,IAAU,GAADC,OAhBrB,+BAgBiC,iBAAiB,CAC3DC,OAAQ,CACNC,QApBM,mCAqBNC,MAAO5B,KAER,KAAD,EALIkB,EAAQC,EAAAU,KAOdxB,EAAiBa,EAASY,KAAKC,SAASZ,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,SAExCV,GAAS,GAAM,yBAAAU,EAAAc,OAAA,GAAAjB,EAAA,mBAElB,gBAfiBkB,GAAA,OAAArB,EAAAsB,MAAA,KAAAC,UAAA,KAiBlB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAME,SAAU3B,EAAa0B,SAAA,EAC3BE,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,YAAY,oBACZC,SA3Ba,SAAA1B,GACnBhB,EAAegB,EAAE2B,OAAOC,MAC1B,KA2BML,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQH,SAAC,cAGvB9B,IAASgC,EAAAA,EAAAA,KAAA,OAAAF,SAAK,2BAEfE,EAAAA,EAAAA,KAAA,MAAAF,SACGlC,EAAc0C,KAAI,SAAAC,GACjB,IAAMC,EAASD,EAAME,YAAW,GAAAxB,OA7CnB,mCA8CQA,OAAGsB,EAAME,aAC1B,KACJ,OACET,EAAAA,EAAAA,KAAA,MAAAF,UACED,EAAAA,EAAAA,MAACa,EAAAA,GAAI,CAACC,GAAE,WAAA1B,OAAasB,EAAMK,IAAMC,MAAO,CAAE3C,SAAAA,GAAW4B,SAAA,CAClDU,IAAUR,EAAAA,EAAAA,KAAA,OAAKc,IAAKN,EAAQO,IAAKR,EAAMS,QACvCT,EAAMS,UAHFT,EAAMK,GAOnB,QAIR,C","sources":["pages/Movies.jsx"],"sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst API_KEY = 'a4e0e6c94492c515df52f4a6ebcc54c7';\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [error, setError] = useState(false);\n  const location = useLocation();\n\n  const handleChange = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!searchQuery) return;\n    try {\n      const response = await axios.get(`${BASE_URL}/search/movie`, {\n        params: {\n          api_key: API_KEY,\n          query: searchQuery,\n        },\n      });\n\n      setSearchResults(response.data.results);\n    } catch (error) {\n      setError(true);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Search for movies\"\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {error && <div>Error loading movies!</div>}\n\n      <ul>\n        {searchResults.map(movie => {\n          const imgUrl = movie.poster_path\n            ? `${IMAGE_BASE_URL}${movie.poster_path}`\n            : null;\n          return (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ location }}>\n                {imgUrl && <img src={imgUrl} alt={movie.title} />}\n                {movie.title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_useState3","_useState4","searchResults","setSearchResults","_useState5","_useState6","error","setError","location","useLocation","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","e","response","_context","prev","next","preventDefault","abrupt","axios","concat","params","api_key","query","sent","data","results","t0","stop","_x","apply","arguments","_jsxs","children","onSubmit","_jsx","type","placeholder","onChange","target","value","map","movie","imgUrl","poster_path","Link","to","id","state","src","alt","title"],"sourceRoot":""}