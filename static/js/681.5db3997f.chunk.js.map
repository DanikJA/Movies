{"version":3,"file":"static/js/681.5db3997f.chunk.js","mappings":"wNAmDA,UA5CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAuBtB,OArBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMC,EAAAA,EAAAA,IAAU,GAADC,OAVvB,+BAWI,WAAAA,OAAUvB,EAAO,YAC5B,CACEwB,OAAQ,CACNC,QAfE,sCAkBN,KAAD,EAPKP,EAAQC,EAAAO,KAQdnB,EAAWW,EAASS,KAAKC,SAAST,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAElCR,EAAS,kCAAkC,yBAAAQ,EAAAW,OAAA,GAAAb,EAAA,kBAE9C,kBAdiB,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,KAelBnB,GACF,GAAG,CAACb,IAEJiC,QAAQC,IAAI5B,GAERI,GACKyB,EAAAA,EAAAA,KAAA,OAAAC,SAAM1B,IAEQ,IAAnBJ,EAAQ+B,QACHF,EAAAA,EAAAA,KAAA,OAAAC,SAAK,0BAGZD,EAAAA,EAAAA,KAAA,OAAAC,SACG9B,EAAQgC,KAAI,SAAAC,GAAM,OACjBC,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACED,EAAAA,EAAAA,KAAA,KAAAC,SAAIG,EAAOE,UACXN,EAAAA,EAAAA,KAAA,KAAAC,SAAIG,EAAOG,YAFJH,EAAOI,GAGX,KAIb,C","sources":["components/Reviews.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\n\nconst API_KEY = 'a4e0e6c94492c515df52f4a6ebcc54c7';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await axios.get(\n          `${BASE_URL}/movie/${movieId}/reviews`,\n          {\n            params: {\n              api_key: API_KEY,\n            },\n          }\n        );\n        setReviews(response.data.results);\n      } catch (error) {\n        setError('Problems with fetching reviews');\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  console.log(reviews);\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n  if (reviews.length === 0) {\n    return <div>No reviews available</div>;\n  }\n  return (\n    <div>\n      {reviews.map(review => (\n        <ul key={review.id}>\n          <p>{review.author}</p>\n          <p>{review.content}</p>\n        </ul>\n      ))}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","error","setError","useEffect","fetchReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","params","api_key","sent","data","results","t0","stop","apply","arguments","console","log","_jsx","children","length","map","review","_jsxs","author","content","id"],"sourceRoot":""}